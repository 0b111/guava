OK: com.google.common.graph.ImmutableGraph.Builder Class
OK: com.google.common.graph.ImmutableNetwork.Builder Class
OK: com.google.common.graph.ImmutableValueGraph.Builder Class
OK: com.google.common.util.concurrent.MoreExecutors Method addDelayedShutdownHook(java.util.concurrent.ExecutorService, java.time.Duration)
OK: com.google.common.util.concurrent.ServiceManager Method awaitHealthy(java.time.Duration)
OK: com.google.common.util.concurrent.Service Method awaitRunning(java.time.Duration)
OK: com.google.common.util.concurrent.ServiceManager Method awaitStopped(java.time.Duration)
OK: com.google.common.util.concurrent.Service Method awaitTerminated(java.time.Duration)
OK: com.google.common.util.concurrent.Uninterruptibles Method awaitUninterruptibly(java.util.concurrent.CountDownLatch, java.time.Duration)
OK: com.google.common.util.concurrent.Uninterruptibles Method awaitUninterruptibly(java.util.concurrent.locks.Condition, java.time.Duration)
OK: com.google.common.util.concurrent.TimeLimiter Method callUninterruptiblyWithTimeout(java.util.concurrent.Callable<T>, java.time.Duration)
OK: com.google.common.util.concurrent.TimeLimiter Method callWithTimeout(java.util.concurrent.Callable<T>, java.time.Duration)
OK: com.google.common.util.concurrent.RateLimiter Method create(double, java.time.Duration)
OK: com.google.common.collect.Queues Method drain(java.util.concurrent.BlockingQueue<E>, java.util.Collection<? super E>, int, java.time.Duration)
OK: com.google.common.collect.Queues Method drainUninterruptibly(java.util.concurrent.BlockingQueue<E>, java.util.Collection<? super E>, int, java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method enter(java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method enterIf(com.google.common.util.concurrent.Monitor.Guard, java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method enterIfInterruptibly(com.google.common.util.concurrent.Monitor.Guard, java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method enterInterruptibly(java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method enterWhen(com.google.common.util.concurrent.Monitor.Guard, java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor.Guard, java.time.Duration)
OK: com.google.common.util.concurrent.FluentFuture Method from(com.google.common.util.concurrent.FluentFuture<V>)
OK: com.google.common.util.concurrent.Futures Method getChecked(java.util.concurrent.Future<V>, java.lang.Class<X>, java.time.Duration)
OK: com.google.common.util.concurrent.MoreExecutors Method getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor, java.time.Duration)
OK: com.google.common.util.concurrent.MoreExecutors Method getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor, java.time.Duration)
OK: com.google.common.util.concurrent.Uninterruptibles Method getUninterruptibly(java.util.concurrent.Future<V>, java.time.Duration)
OK: com.google.common.graph.GraphBuilder Method immutable()
OK: com.google.common.graph.NetworkBuilder Method immutable()
OK: com.google.common.graph.ValueGraphBuilder Method immutable()
OK: com.google.common.util.concurrent.Uninterruptibles Method joinUninterruptibly(java.lang.Thread, java.time.Duration)
OK: com.google.common.util.concurrent.AbstractScheduledService.Scheduler Method newFixedDelaySchedule(java.time.Duration, java.time.Duration)
OK: com.google.common.util.concurrent.AbstractScheduledService.Scheduler Method newFixedRateSchedule(java.time.Duration, java.time.Duration)
OK: com.google.common.util.concurrent.TimeLimiter Method newProxy(T, java.lang.Class<T>, java.time.Duration)
OK: com.google.common.util.concurrent.TimeLimiter Method runUninterruptiblyWithTimeout(java.lang.Runnable, java.time.Duration)
OK: com.google.common.util.concurrent.TimeLimiter Method runWithTimeout(java.lang.Runnable, java.time.Duration)
OK: com.google.common.util.concurrent.Futures Method scheduleAsync(com.google.common.util.concurrent.AsyncCallable<O>, java.time.Duration, java.util.concurrent.ScheduledExecutorService)
OK: com.google.common.util.concurrent.MoreExecutors Method shutdownAndAwaitTermination(java.util.concurrent.ExecutorService, java.time.Duration)
OK: com.google.common.util.concurrent.Uninterruptibles Method sleepUninterruptibly(java.time.Duration)
OK: com.google.common.util.concurrent.RateLimiter Method tryAcquire(int, java.time.Duration)
OK: com.google.common.util.concurrent.RateLimiter Method tryAcquire(java.time.Duration)
OK: com.google.common.util.concurrent.Uninterruptibles Method tryAcquireUninterruptibly(java.util.concurrent.Semaphore, int, java.time.Duration)
OK: com.google.common.util.concurrent.Uninterruptibles Method tryAcquireUninterruptibly(java.util.concurrent.Semaphore, java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method waitFor(com.google.common.util.concurrent.Monitor.Guard, java.time.Duration)
OK: com.google.common.util.concurrent.Monitor Method waitForUninterruptibly(com.google.common.util.concurrent.Monitor.Guard, java.time.Duration)
OK: com.google.common.util.concurrent.FluentFuture Method withTimeout(java.time.Duration, java.util.concurrent.ScheduledExecutorService)
OK: com.google.common.util.concurrent.Futures Method withTimeout(com.google.common.util.concurrent.ListenableFuture<V>, java.time.Duration, java.util.concurrent.ScheduledExecutorService)
OK: com.google.common.net.HttpHeaders Field CDN_LOOP
OK: com.google.common.net.HttpHeaders Field CROSS_ORIGIN_RESOURCE_POLICY
OK: com.google.common.net.MediaType Field GEO_JSON
OK: com.google.common.net.HttpHeaders Field PURPOSE
OK: com.google.common.net.HttpHeaders Field SEC_WEBSOCKET_ACCEPT
OK: com.google.common.net.HttpHeaders Field SEC_WEBSOCKET_EXTENSIONS
OK: com.google.common.net.HttpHeaders Field SEC_WEBSOCKET_KEY
OK: com.google.common.net.HttpHeaders Field SEC_WEBSOCKET_PROTOCOL
OK: com.google.common.net.HttpHeaders Field SEC_WEBSOCKET_VERSION
OK: com.google.common.net.HttpHeaders Field X_MOZ
OK: com.google.common.net.HttpHeaders Field X_PURPOSE
